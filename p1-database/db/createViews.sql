CREATE VIEW VIEW_USER_INFORMATION (
    USER_ID, FIRST_NAME, LAST_NAME, 
    YEAR_OF_BIRTH, MONTH_OF_BIRTH, DAY_OF_BIRTH, GENDER, 
    CURRENT_CITY, CURRENT_STATE, CURRENT_COUNTRY,
    HOMETOWN_CITY, HOMETOWN_STATE, HOMETOWN_COUNTRY,
    INSTITUTION_NAME, PROGRAM_YEAR, PROGRAM_CONCENTRATION, PROGRAM_DEGREE
) AS (
    SELECT 
        U.USER_ID, U.FIRST_NAME, U.LAST_NAME,
        U.YEAR_OF_BIRTH, U.MONTH_OF_BIRTH, U.DAY_OF_BIRTH, U.GENDER,
        C1.CITY_NAME, C1.STATE_NAME, C1.COUNTRY_NAME,
        C2.CITY_NAME, C2.STATE_NAME, C2.COUNTRY_NAME,
        PRO.INSTITUTION, EDU.PROGRAM_YEAR, PRO.CONCENTRATION, PRO.DEGREE
    FROM USERS U
    LEFT JOIN USER_CURRENT_CITIES CC ON U.USER_ID = CC.USER_ID
    LEFT JOIN CITIES C1 ON CC.CURRENT_CITY_ID = C1.CITY_ID
    LEFT JOIN USER_HOMETOWN_CITIES HC ON U.USER_ID = HC.USER_ID
    LEFT JOIN CITIES C2 ON HC.HOMETOWN_CITY_ID = C2.CITY_ID
    LEFT JOIN EDUCATION EDU ON U.USER_ID = EDU.USER_ID
    LEFT JOIN PROGRAMS PRO ON EDU.PROGRAM_ID = PRO.PROGRAM_ID
);

CREATE VIEW VIEW_ARE_FRIENDS (USER1_ID, USER2_ID) AS (
    SELECT USER1_ID, USER2_ID
    FROM FRIENDS F
);

CREATE VIEW VIEW_PHOTO_INFORMATION (
    ALBUM_ID, OWNER_ID, COVER_PHOTO_ID, 
    ALBUM_NAME, ALBUM_CREATED_TIME, ALBUM_MODIFIED_TIME,
    ALBUM_LINK, ALBUM_VISIBILITY, 
    PHOTO_ID, PHOTO_CAPTION, PHOTO_CREATED_TIME, PHOTO_MODIFIED_TIME, PHOTO_LINK
) AS (
    SELECT 
        A.ALBUM_ID, A.ALBUM_OWNER_ID, A.COVER_PHOTO_ID,
        A.ALBUM_NAME, A.ALBUM_CREATED_TIME, A.ALBUM_MODIFIED_TIME, 
        A.ALBUM_LINK, A.ALBUM_VISIBILITY, 
        PHO.PHOTO_ID, PHO.PHOTO_CAPTION, 
        PHO.PHOTO_CREATED_TIME, PHO.PHOTO_MODIFIED_TIME, PHO.PHOTO_LINK
    FROM ALBUMS A
    LEFT JOIN PHOTOS PHO
    ON PHO.ALBUM_ID = A.ALBUM_ID
);

CREATE VIEW VIEW_EVENT_INFORMATION (
    EVENT_ID, EVENT_CREATOR_ID, EVENT_NAME, EVENT_TAGLINE,
    EVENT_DESCRIPTION, EVENT_HOST,
    EVENT_TYPE, EVENT_SUBTYPE, EVENT_ADDRESS, 
    EVENT_CITY, EVENT_STATE, EVENT_COUNTRY,
    EVENT_START_TIME, EVENT_END_TIME
) AS (
    SELECT 
        E.EVENT_ID, E.EVENT_CREATOR_ID, E.EVENT_NAME, e.EVENT_TAGLINE,
        E.EVENT_DESCRIPTION, E.EVENT_HOST,
        E.EVENT_TYPE, E.EVENT_SUBTYPE, E.EVENT_ADDRESS,
        C.CITY_NAME, C.STATE_NAME, C.COUNTRY_NAME,
        E.EVENT_START_TIME, E.EVENT_END_TIME
    FROM USER_EVENTS E
    LEFT JOIN CITIES C ON E.EVENT_CITY_ID = C.CITY_ID
);

CREATE VIEW VIEW_TAG_INFORMATION (
    PHOTO_ID, TAG_SUBJECT_ID, TAG_CREATED_TIME, 
    TAG_X_COORDINATE, TAG_Y_COORDINATE
) AS (
    SELECT 
        TAG_PHOTO_ID, TAG_SUBJECT_ID, TAG_CREATED_TIME, TAG_X, TAG_Y
    FROM TAGS T
);